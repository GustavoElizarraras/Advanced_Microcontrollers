
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000b0a  00000b9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b0a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080010e  0080010e  00000bac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bdc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cb8  00000000  00000000  00000d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000880  00000000  00000000  000039c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d94  00000000  00000000  00004244  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000023c  00000000  00000000  00004fd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000054a  00000000  00000000  00005214  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002145  00000000  00000000  0000575e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000078a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e0       	ldi	r30, 0x0A	; 10
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 31       	cpi	r26, 0x1A	; 26
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <main>
  9e:	0c 94 83 05 	jmp	0xb06	; 0xb06 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ENVIA_CMD>:
	// _delay_ms(500);
	// ENVIA_DATO(7);
	// CURSOR_IZQ_CORRE();
	// _delay_ms(500);
	// LIMPIA_LCD();
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	96 95       	lsr	r25
  ac:	96 95       	lsr	r25
  ae:	98 b9       	out	0x08, r25	; 8
  b0:	98 b1       	in	r25, 0x08	; 8
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	98 b9       	out	0x08, r25	; 8
  b6:	98 b1       	in	r25, 0x08	; 8
  b8:	92 60       	ori	r25, 0x02	; 2
  ba:	98 b9       	out	0x08, r25	; 8
  bc:	ef e9       	ldi	r30, 0x9F	; 159
  be:	ff e0       	ldi	r31, 0x0F	; 15
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <ENVIA_CMD+0x1a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <ENVIA_CMD+0x20>
  c6:	00 00       	nop
  c8:	98 b1       	in	r25, 0x08	; 8
  ca:	9d 7f       	andi	r25, 0xFD	; 253
  cc:	98 b9       	out	0x08, r25	; 8
  ce:	ef e3       	ldi	r30, 0x3F	; 63
  d0:	fc e9       	ldi	r31, 0x9C	; 156
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <ENVIA_CMD+0x2c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <ENVIA_CMD+0x32>
  d8:	00 00       	nop
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	8c 73       	andi	r24, 0x3C	; 60
  e6:	88 b9       	out	0x08, r24	; 8
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	88 b9       	out	0x08, r24	; 8
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	88 b9       	out	0x08, r24	; 8
  f4:	8f e9       	ldi	r24, 0x9F	; 159
  f6:	9f e0       	ldi	r25, 0x0F	; 15
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <ENVIA_CMD+0x52>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <ENVIA_CMD+0x58>
  fe:	00 00       	nop
 100:	88 b1       	in	r24, 0x08	; 8
 102:	8d 7f       	andi	r24, 0xFD	; 253
 104:	88 b9       	out	0x08, r24	; 8
 106:	ef e3       	ldi	r30, 0x3F	; 63
 108:	fc e9       	ldi	r31, 0x9C	; 156
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <ENVIA_CMD+0x64>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <ENVIA_CMD+0x6a>
 110:	00 00       	nop
 112:	08 95       	ret

00000114 <LCD_INICIALIZA>:
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 11a:	88 e2       	ldi	r24, 0x28	; 40
 11c:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 120:	8e e0       	ldi	r24, 0x0E	; 14
 122:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 132:	80 e8       	ldi	r24, 0x80	; 128
 134:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 138:	08 95       	ret

0000013a <ENVIA_DATO>:
 13a:	98 2f       	mov	r25, r24
 13c:	90 7f       	andi	r25, 0xF0	; 240
 13e:	96 95       	lsr	r25
 140:	96 95       	lsr	r25
 142:	98 b9       	out	0x08, r25	; 8
 144:	98 b1       	in	r25, 0x08	; 8
 146:	93 60       	ori	r25, 0x03	; 3
 148:	98 b9       	out	0x08, r25	; 8
 14a:	ef e9       	ldi	r30, 0x9F	; 159
 14c:	ff e0       	ldi	r31, 0x0F	; 15
 14e:	31 97       	sbiw	r30, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <ENVIA_DATO+0x14>
 152:	00 c0       	rjmp	.+0      	; 0x154 <ENVIA_DATO+0x1a>
 154:	00 00       	nop
 156:	98 b1       	in	r25, 0x08	; 8
 158:	9d 7f       	andi	r25, 0xFD	; 253
 15a:	98 b9       	out	0x08, r25	; 8
 15c:	98 b1       	in	r25, 0x08	; 8
 15e:	9e 7f       	andi	r25, 0xFE	; 254
 160:	98 b9       	out	0x08, r25	; 8
 162:	ef e3       	ldi	r30, 0x3F	; 63
 164:	fc e9       	ldi	r31, 0x9C	; 156
 166:	31 97       	sbiw	r30, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <ENVIA_DATO+0x2c>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <ENVIA_DATO+0x32>
 16c:	00 00       	nop
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	8c 73       	andi	r24, 0x3C	; 60
 17a:	88 b9       	out	0x08, r24	; 8
 17c:	88 b1       	in	r24, 0x08	; 8
 17e:	83 60       	ori	r24, 0x03	; 3
 180:	88 b9       	out	0x08, r24	; 8
 182:	8f e9       	ldi	r24, 0x9F	; 159
 184:	9f e0       	ldi	r25, 0x0F	; 15
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <ENVIA_DATO+0x4c>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <ENVIA_DATO+0x52>
 18c:	00 00       	nop
 18e:	88 b1       	in	r24, 0x08	; 8
 190:	8d 7f       	andi	r24, 0xFD	; 253
 192:	88 b9       	out	0x08, r24	; 8
 194:	88 b1       	in	r24, 0x08	; 8
 196:	8e 7f       	andi	r24, 0xFE	; 254
 198:	88 b9       	out	0x08, r24	; 8
 19a:	ef e3       	ldi	r30, 0x3F	; 63
 19c:	fc e9       	ldi	r31, 0x9C	; 156
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <ENVIA_DATO+0x64>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <ENVIA_DATO+0x6a>
 1a4:	00 00       	nop
 1a6:	08 95       	ret

000001a8 <ENVIA_CADENA>:
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	8c 01       	movw	r16, r24
 1b2:	c0 e0       	ldi	r28, 0x00	; 0
 1b4:	d0 e0       	ldi	r29, 0x00	; 0
 1b6:	03 c0       	rjmp	.+6      	; 0x1be <ENVIA_CADENA+0x16>
 1b8:	0e 94 9d 00 	call	0x13a	; 0x13a <ENVIA_DATO>
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	f8 01       	movw	r30, r16
 1c0:	ec 0f       	add	r30, r28
 1c2:	fd 1f       	adc	r31, r29
 1c4:	80 81       	ld	r24, Z
 1c6:	81 11       	cpse	r24, r1
 1c8:	f7 cf       	rjmp	.-18     	; 0x1b8 <ENVIA_CADENA+0x10>
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	0f 91       	pop	r16
 1d2:	08 95       	ret

000001d4 <LIMPIA_LCD>:
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1da:	08 95       	ret

000001dc <REGRESO_CASA>:
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1e2:	08 95       	ret

000001e4 <POS_LINEA1>:
 1e4:	80 68       	ori	r24, 0x80	; 128
 1e6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1ea:	08 95       	ret

000001ec <POS_LINEA2>:
 1ec:	80 6c       	ori	r24, 0xC0	; 192
 1ee:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1f2:	08 95       	ret

000001f4 <__vector_16>:
double dutyCycleR = 0;
double dutyCycleG = 0;
double dutyCycleB = 0;

ISR(TIMER0_OVF_vect)
{
 1f4:	1f 92       	push	r1
 1f6:	0f 92       	push	r0
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	0f 92       	push	r0
 1fc:	11 24       	eor	r1, r1
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
	OCR0A = (dutyCycleR/100.0)*255;
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	48 ec       	ldi	r20, 0xC8	; 200
 21c:	52 e4       	ldi	r21, 0x42	; 66
 21e:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <dutyCycleR>
 222:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <dutyCycleR+0x1>
 226:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <dutyCycleR+0x2>
 22a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <dutyCycleR+0x3>
 22e:	0e 94 bf 03 	call	0x77e	; 0x77e <__divsf3>
 232:	20 e0       	ldi	r18, 0x00	; 0
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	4f e7       	ldi	r20, 0x7F	; 127
 238:	53 e4       	ldi	r21, 0x43	; 67
 23a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
 23e:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
 242:	67 bd       	out	0x27, r22	; 39
	OCR0B = (dutyCycleG/100.0)*255;
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	48 ec       	ldi	r20, 0xC8	; 200
 24a:	52 e4       	ldi	r21, 0x42	; 66
 24c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <dutyCycleG>
 250:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <dutyCycleG+0x1>
 254:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <dutyCycleG+0x2>
 258:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <dutyCycleG+0x3>
 25c:	0e 94 bf 03 	call	0x77e	; 0x77e <__divsf3>
 260:	20 e0       	ldi	r18, 0x00	; 0
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	4f e7       	ldi	r20, 0x7F	; 127
 266:	53 e4       	ldi	r21, 0x43	; 67
 268:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
 26c:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
 270:	68 bd       	out	0x28, r22	; 40
	OCR2B = (dutyCycleB/100.0)*255;
 272:	20 e0       	ldi	r18, 0x00	; 0
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	48 ec       	ldi	r20, 0xC8	; 200
 278:	52 e4       	ldi	r21, 0x42	; 66
 27a:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 27e:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 282:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 286:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 28a:	0e 94 bf 03 	call	0x77e	; 0x77e <__divsf3>
 28e:	20 e0       	ldi	r18, 0x00	; 0
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	4f e7       	ldi	r20, 0x7F	; 127
 294:	53 e4       	ldi	r21, 0x43	; 67
 296:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
 29a:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
 29e:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
}
 2a2:	ff 91       	pop	r31
 2a4:	ef 91       	pop	r30
 2a6:	bf 91       	pop	r27
 2a8:	af 91       	pop	r26
 2aa:	9f 91       	pop	r25
 2ac:	8f 91       	pop	r24
 2ae:	7f 91       	pop	r23
 2b0:	6f 91       	pop	r22
 2b2:	5f 91       	pop	r21
 2b4:	4f 91       	pop	r20
 2b6:	3f 91       	pop	r19
 2b8:	2f 91       	pop	r18
 2ba:	0f 90       	pop	r0
 2bc:	0f be       	out	0x3f, r0	; 63
 2be:	0f 90       	pop	r0
 2c0:	1f 90       	pop	r1
 2c2:	18 95       	reti

000002c4 <main>:

int main(void)
{
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
 2cc:	6e 97       	sbiw	r28, 0x1e	; 30
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
    char bufferB[10];
	
    // DDRD = 0xFF;		// PWM
	// 4 PWM channel outputs
	// DDRB |= 1<<PB3; // OC2A
	DDRD |= 1<<PD3; // OC2B
 2d8:	8a b1       	in	r24, 0x0a	; 10
 2da:	88 60       	ori	r24, 0x08	; 8
 2dc:	8a b9       	out	0x0a, r24	; 10
	DDRD |= 1<<PD5; // OC0B
 2de:	8a b1       	in	r24, 0x0a	; 10
 2e0:	80 62       	ori	r24, 0x20	; 32
 2e2:	8a b9       	out	0x0a, r24	; 10
	DDRD |= 1<<PD6; // OC0A	
 2e4:	8a b1       	in	r24, 0x0a	; 10
 2e6:	80 64       	ori	r24, 0x40	; 64
 2e8:	8a b9       	out	0x0a, r24	; 10


	DDRB = 0x00;		// AUMENTAR PWM
 2ea:	14 b8       	out	0x04, r1	; 4
	DDRC = 0xFF;		// LCD
 2ec:	8f ef       	ldi	r24, 0xFF	; 255
 2ee:	87 b9       	out	0x07, r24	; 7
	
	TCCR0A = (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00) | (1 << WGM01);
 2f0:	83 ea       	ldi	r24, 0xA3	; 163
 2f2:	84 bd       	out	0x24, r24	; 36
	TIMSK0 = (1 << TOIE0);
 2f4:	ee e6       	ldi	r30, 0x6E	; 110
 2f6:	f0 e0       	ldi	r31, 0x00	; 0
 2f8:	21 e0       	ldi	r18, 0x01	; 1
 2fa:	20 83       	st	Z, r18

	sei();
 2fc:	78 94       	sei
	
	TCCR0B = (1 << CS00) | (1 << CS02);
 2fe:	95 e0       	ldi	r25, 0x05	; 5
 300:	95 bd       	out	0x25, r25	; 37

//
    TCCR2A |= (1 << COM2B1) | (1<<WGM20) | (1<<WGM21) | (1<<WGM22);
 302:	a0 eb       	ldi	r26, 0xB0	; 176
 304:	b0 e0       	ldi	r27, 0x00	; 0
 306:	8c 91       	ld	r24, X
 308:	8b 62       	ori	r24, 0x2B	; 43
 30a:	8c 93       	st	X, r24
	TIMSK0 = (1 << TOIE2);
 30c:	20 83       	st	Z, r18
	TCCR2B = (1 << CS20) | (1 << CS22);
 30e:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
//

	OCR0A = (dutyCycleR/100.0)*255.0;
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	48 ec       	ldi	r20, 0xC8	; 200
 318:	52 e4       	ldi	r21, 0x42	; 66
 31a:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <dutyCycleR>
 31e:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <dutyCycleR+0x1>
 322:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <dutyCycleR+0x2>
 326:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <dutyCycleR+0x3>
 32a:	0e 94 bf 03 	call	0x77e	; 0x77e <__divsf3>
 32e:	20 e0       	ldi	r18, 0x00	; 0
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	4f e7       	ldi	r20, 0x7F	; 127
 334:	53 e4       	ldi	r21, 0x43	; 67
 336:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
 33a:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
 33e:	67 bd       	out	0x27, r22	; 39
    OCR0B = (dutyCycleG/100.0)*255.0;
 340:	20 e0       	ldi	r18, 0x00	; 0
 342:	30 e0       	ldi	r19, 0x00	; 0
 344:	48 ec       	ldi	r20, 0xC8	; 200
 346:	52 e4       	ldi	r21, 0x42	; 66
 348:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <dutyCycleG>
 34c:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <dutyCycleG+0x1>
 350:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <dutyCycleG+0x2>
 354:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <dutyCycleG+0x3>
 358:	0e 94 bf 03 	call	0x77e	; 0x77e <__divsf3>
 35c:	20 e0       	ldi	r18, 0x00	; 0
 35e:	30 e0       	ldi	r19, 0x00	; 0
 360:	4f e7       	ldi	r20, 0x7F	; 127
 362:	53 e4       	ldi	r21, 0x43	; 67
 364:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
 368:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
 36c:	68 bd       	out	0x28, r22	; 40
    OCR2B = (dutyCycleB/100.0)*255.0;
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	48 ec       	ldi	r20, 0xC8	; 200
 374:	52 e4       	ldi	r21, 0x42	; 66
 376:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 37a:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 37e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 382:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 386:	0e 94 bf 03 	call	0x77e	; 0x77e <__divsf3>
 38a:	20 e0       	ldi	r18, 0x00	; 0
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	4f e7       	ldi	r20, 0x7F	; 127
 390:	53 e4       	ldi	r21, 0x43	; 67
 392:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
 396:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
 39a:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>

    LCD_INICIALIZA();
 39e:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_INICIALIZA>
	LIMPIA_LCD();
 3a2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
	REGRESO_CASA();
 3a6:	0e 94 ee 00 	call	0x1dc	; 0x1dc <REGRESO_CASA>

    /* Replace with your application code */
    while (1) 
    {
        indice = PINB & 0xFF;
 3aa:	83 b1       	in	r24, 0x03	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ac:	2f ef       	ldi	r18, 0xFF	; 255
 3ae:	36 e7       	ldi	r19, 0x76	; 118
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	21 50       	subi	r18, 0x01	; 1
 3b4:	30 40       	sbci	r19, 0x00	; 0
 3b6:	90 40       	sbci	r25, 0x00	; 0
 3b8:	e1 f7       	brne	.-8      	; 0x3b2 <main+0xee>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <main+0xf8>
 3bc:	00 00       	nop
		_delay_ms(30);
        
        switch(indice){
 3be:	84 30       	cpi	r24, 0x04	; 4
 3c0:	f1 f1       	breq	.+124    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3c2:	28 f4       	brcc	.+10     	; 0x3ce <main+0x10a>
 3c4:	81 30       	cpi	r24, 0x01	; 1
 3c6:	69 f0       	breq	.+26     	; 0x3e2 <main+0x11e>
 3c8:	82 30       	cpi	r24, 0x02	; 2
 3ca:	11 f1       	breq	.+68     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3cc:	93 c0       	rjmp	.+294    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 3ce:	80 31       	cpi	r24, 0x10	; 16
 3d0:	09 f4       	brne	.+2      	; 0x3d4 <main+0x110>
 3d2:	63 c0       	rjmp	.+198    	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 3d4:	80 32       	cpi	r24, 0x20	; 32
 3d6:	09 f4       	brne	.+2      	; 0x3da <main+0x116>
 3d8:	77 c0       	rjmp	.+238    	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 3da:	88 30       	cpi	r24, 0x08	; 8
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <main+0x11c>
 3de:	8a c0       	rjmp	.+276    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 3e0:	45 c0       	rjmp	.+138    	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
            case 0b0001:
                dutyCycleR += 10;
 3e2:	20 e0       	ldi	r18, 0x00	; 0
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	40 e2       	ldi	r20, 0x20	; 32
 3e8:	51 e4       	ldi	r21, 0x41	; 65
 3ea:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <dutyCycleR>
 3ee:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <dutyCycleR+0x1>
 3f2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <dutyCycleR+0x2>
 3f6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <dutyCycleR+0x3>
 3fa:	0e 94 4e 03 	call	0x69c	; 0x69c <__addsf3>
 3fe:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <dutyCycleR>
 402:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <dutyCycleR+0x1>
 406:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <dutyCycleR+0x2>
 40a:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <dutyCycleR+0x3>
            break;
 40e:	72 c0       	rjmp	.+228    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
            case 0b0010:
                dutyCycleR -= 10;
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	40 e2       	ldi	r20, 0x20	; 32
 416:	51 e4       	ldi	r21, 0x41	; 65
 418:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <dutyCycleR>
 41c:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <dutyCycleR+0x1>
 420:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <dutyCycleR+0x2>
 424:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <dutyCycleR+0x3>
 428:	0e 94 4d 03 	call	0x69a	; 0x69a <__subsf3>
 42c:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <dutyCycleR>
 430:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <dutyCycleR+0x1>
 434:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <dutyCycleR+0x2>
 438:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <dutyCycleR+0x3>
            break;
 43c:	5b c0       	rjmp	.+182    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
			
            case 0b0100:
                dutyCycleG += 10;
 43e:	20 e0       	ldi	r18, 0x00	; 0
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	40 e2       	ldi	r20, 0x20	; 32
 444:	51 e4       	ldi	r21, 0x41	; 65
 446:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <dutyCycleG>
 44a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <dutyCycleG+0x1>
 44e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <dutyCycleG+0x2>
 452:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <dutyCycleG+0x3>
 456:	0e 94 4e 03 	call	0x69c	; 0x69c <__addsf3>
 45a:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <dutyCycleG>
 45e:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <dutyCycleG+0x1>
 462:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <dutyCycleG+0x2>
 466:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <dutyCycleG+0x3>
            break;
 46a:	44 c0       	rjmp	.+136    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
            case 0b1000:
				dutyCycleG -= 10;
 46c:	20 e0       	ldi	r18, 0x00	; 0
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	40 e2       	ldi	r20, 0x20	; 32
 472:	51 e4       	ldi	r21, 0x41	; 65
 474:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <dutyCycleG>
 478:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <dutyCycleG+0x1>
 47c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <dutyCycleG+0x2>
 480:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <dutyCycleG+0x3>
 484:	0e 94 4d 03 	call	0x69a	; 0x69a <__subsf3>
 488:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <dutyCycleG>
 48c:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <dutyCycleG+0x1>
 490:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <dutyCycleG+0x2>
 494:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <dutyCycleG+0x3>
            break;
 498:	2d c0       	rjmp	.+90     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
			
            case 0b00010000:
				dutyCycleB += 10;
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	40 e2       	ldi	r20, 0x20	; 32
 4a0:	51 e4       	ldi	r21, 0x41	; 65
 4a2:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 4a6:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 4aa:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 4ae:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 4b2:	0e 94 4e 03 	call	0x69c	; 0x69c <__addsf3>
 4b6:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <__data_end>
 4ba:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <__data_end+0x1>
 4be:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>
 4c2:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
            break;
 4c6:	16 c0       	rjmp	.+44     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
            case 0b00100000:
				dutyCycleB -= 10;
 4c8:	20 e0       	ldi	r18, 0x00	; 0
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	40 e2       	ldi	r20, 0x20	; 32
 4ce:	51 e4       	ldi	r21, 0x41	; 65
 4d0:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 4d4:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 4d8:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 4dc:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 4e0:	0e 94 4d 03 	call	0x69a	; 0x69a <__subsf3>
 4e4:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <__data_end>
 4e8:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <__data_end+0x1>
 4ec:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>
 4f0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
            break;
        }
			
	
		if(dutyCycleR > 100 || dutyCycleR < 0)
 4f4:	c0 90 16 01 	lds	r12, 0x0116	; 0x800116 <dutyCycleR>
 4f8:	d0 90 17 01 	lds	r13, 0x0117	; 0x800117 <dutyCycleR+0x1>
 4fc:	e0 90 18 01 	lds	r14, 0x0118	; 0x800118 <dutyCycleR+0x2>
 500:	f0 90 19 01 	lds	r15, 0x0119	; 0x800119 <dutyCycleR+0x3>
 504:	20 e0       	ldi	r18, 0x00	; 0
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	48 ec       	ldi	r20, 0xC8	; 200
 50a:	52 e4       	ldi	r21, 0x42	; 66
 50c:	c7 01       	movw	r24, r14
 50e:	b6 01       	movw	r22, r12
 510:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__gesf2>
 514:	18 16       	cp	r1, r24
 516:	4c f0       	brlt	.+18     	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
 518:	20 e0       	ldi	r18, 0x00	; 0
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	a9 01       	movw	r20, r18
 51e:	c7 01       	movw	r24, r14
 520:	b6 01       	movw	r22, r12
 522:	0e 94 ba 03 	call	0x774	; 0x774 <__cmpsf2>
 526:	88 23       	and	r24, r24
 528:	54 f4       	brge	.+20     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
		{
			dutyCycleR = 0;
 52a:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <dutyCycleR>
 52e:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <dutyCycleR+0x1>
 532:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <dutyCycleR+0x2>
 536:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <dutyCycleR+0x3>
            LIMPIA_LCD();
 53a:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
		}

		if(dutyCycleG > 100 || dutyCycleG < 0)
 53e:	c0 90 12 01 	lds	r12, 0x0112	; 0x800112 <dutyCycleG>
 542:	d0 90 13 01 	lds	r13, 0x0113	; 0x800113 <dutyCycleG+0x1>
 546:	e0 90 14 01 	lds	r14, 0x0114	; 0x800114 <dutyCycleG+0x2>
 54a:	f0 90 15 01 	lds	r15, 0x0115	; 0x800115 <dutyCycleG+0x3>
 54e:	20 e0       	ldi	r18, 0x00	; 0
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	48 ec       	ldi	r20, 0xC8	; 200
 554:	52 e4       	ldi	r21, 0x42	; 66
 556:	c7 01       	movw	r24, r14
 558:	b6 01       	movw	r22, r12
 55a:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__gesf2>
 55e:	18 16       	cp	r1, r24
 560:	4c f0       	brlt	.+18     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 562:	20 e0       	ldi	r18, 0x00	; 0
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	a9 01       	movw	r20, r18
 568:	c7 01       	movw	r24, r14
 56a:	b6 01       	movw	r22, r12
 56c:	0e 94 ba 03 	call	0x774	; 0x774 <__cmpsf2>
 570:	88 23       	and	r24, r24
 572:	54 f4       	brge	.+20     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
		{
			dutyCycleG = 0;
 574:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <dutyCycleG>
 578:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <dutyCycleG+0x1>
 57c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <dutyCycleG+0x2>
 580:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <dutyCycleG+0x3>
        	LIMPIA_LCD();
 584:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
		}

		if(dutyCycleB > 100 || dutyCycleB < 0)
 588:	c0 90 0e 01 	lds	r12, 0x010E	; 0x80010e <__data_end>
 58c:	d0 90 0f 01 	lds	r13, 0x010F	; 0x80010f <__data_end+0x1>
 590:	e0 90 10 01 	lds	r14, 0x0110	; 0x800110 <__data_end+0x2>
 594:	f0 90 11 01 	lds	r15, 0x0111	; 0x800111 <__data_end+0x3>
 598:	20 e0       	ldi	r18, 0x00	; 0
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	48 ec       	ldi	r20, 0xC8	; 200
 59e:	52 e4       	ldi	r21, 0x42	; 66
 5a0:	c7 01       	movw	r24, r14
 5a2:	b6 01       	movw	r22, r12
 5a4:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__gesf2>
 5a8:	18 16       	cp	r1, r24
 5aa:	4c f0       	brlt	.+18     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5ac:	20 e0       	ldi	r18, 0x00	; 0
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	a9 01       	movw	r20, r18
 5b2:	c7 01       	movw	r24, r14
 5b4:	b6 01       	movw	r22, r12
 5b6:	0e 94 ba 03 	call	0x774	; 0x774 <__cmpsf2>
 5ba:	88 23       	and	r24, r24
 5bc:	54 f4       	brge	.+20     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
		{
			dutyCycleB = 0;
 5be:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
 5c2:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__data_end+0x1>
 5c6:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end+0x2>
 5ca:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__data_end+0x3>
        	LIMPIA_LCD();
 5ce:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
		}
        
        POS_LINEA1(1);
 5d2:	81 e0       	ldi	r24, 0x01	; 1
 5d4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <POS_LINEA1>
        itoa(dutyCycleR, bufferR, 10);
 5d8:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <dutyCycleR>
 5dc:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <dutyCycleR+0x1>
 5e0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <dutyCycleR+0x2>
 5e4:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <dutyCycleR+0x3>
 5e8:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
 5ec:	dc 01       	movw	r26, r24
 5ee:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 5f0:	4a e0       	ldi	r20, 0x0A	; 10
 5f2:	be 01       	movw	r22, r28
 5f4:	6f 5f       	subi	r22, 0xFF	; 255
 5f6:	7f 4f       	sbci	r23, 0xFF	; 255
 5f8:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__itoa_ncheck>
		ENVIA_CADENA("R: ");
 5fc:	80 e0       	ldi	r24, 0x00	; 0
 5fe:	91 e0       	ldi	r25, 0x01	; 1
 600:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		ENVIA_CADENA(bufferR);
 604:	ce 01       	movw	r24, r28
 606:	01 96       	adiw	r24, 0x01	; 1
 608:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		ENVIA_CADENA("%");
 60c:	84 e0       	ldi	r24, 0x04	; 4
 60e:	91 e0       	ldi	r25, 0x01	; 1
 610:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>

        POS_LINEA1(9);
 614:	89 e0       	ldi	r24, 0x09	; 9
 616:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <POS_LINEA1>
        itoa(dutyCycleG, bufferG, 10);
 61a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <dutyCycleG>
 61e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <dutyCycleG+0x1>
 622:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <dutyCycleG+0x2>
 626:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <dutyCycleG+0x3>
 62a:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
 62e:	dc 01       	movw	r26, r24
 630:	cb 01       	movw	r24, r22
 632:	4a e0       	ldi	r20, 0x0A	; 10
 634:	be 01       	movw	r22, r28
 636:	65 5f       	subi	r22, 0xF5	; 245
 638:	7f 4f       	sbci	r23, 0xFF	; 255
 63a:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__itoa_ncheck>
		ENVIA_CADENA("G: ");
 63e:	86 e0       	ldi	r24, 0x06	; 6
 640:	91 e0       	ldi	r25, 0x01	; 1
 642:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		ENVIA_CADENA(bufferG);
 646:	ce 01       	movw	r24, r28
 648:	0b 96       	adiw	r24, 0x0b	; 11
 64a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		ENVIA_CADENA("%");
 64e:	84 e0       	ldi	r24, 0x04	; 4
 650:	91 e0       	ldi	r25, 0x01	; 1
 652:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>

        POS_LINEA2(1);
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA2>
        itoa(dutyCycleB, bufferB, 10);
 65c:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 660:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 664:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 668:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 66c:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
 670:	dc 01       	movw	r26, r24
 672:	cb 01       	movw	r24, r22
 674:	4a e0       	ldi	r20, 0x0A	; 10
 676:	be 01       	movw	r22, r28
 678:	6b 5e       	subi	r22, 0xEB	; 235
 67a:	7f 4f       	sbci	r23, 0xFF	; 255
 67c:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__itoa_ncheck>
		ENVIA_CADENA("B: ");
 680:	8a e0       	ldi	r24, 0x0A	; 10
 682:	91 e0       	ldi	r25, 0x01	; 1
 684:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		ENVIA_CADENA(bufferB);
 688:	ce 01       	movw	r24, r28
 68a:	45 96       	adiw	r24, 0x15	; 21
 68c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		ENVIA_CADENA("%");
 690:	84 e0       	ldi	r24, 0x04	; 4
 692:	91 e0       	ldi	r25, 0x01	; 1
 694:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
    }
 698:	88 ce       	rjmp	.-752    	; 0x3aa <main+0xe6>

0000069a <__subsf3>:
 69a:	50 58       	subi	r21, 0x80	; 128

0000069c <__addsf3>:
 69c:	bb 27       	eor	r27, r27
 69e:	aa 27       	eor	r26, r26
 6a0:	0e 94 65 03 	call	0x6ca	; 0x6ca <__addsf3x>
 6a4:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_round>
 6a8:	0e 94 94 04 	call	0x928	; 0x928 <__fp_pscA>
 6ac:	38 f0       	brcs	.+14     	; 0x6bc <__addsf3+0x20>
 6ae:	0e 94 9b 04 	call	0x936	; 0x936 <__fp_pscB>
 6b2:	20 f0       	brcs	.+8      	; 0x6bc <__addsf3+0x20>
 6b4:	39 f4       	brne	.+14     	; 0x6c4 <__addsf3+0x28>
 6b6:	9f 3f       	cpi	r25, 0xFF	; 255
 6b8:	19 f4       	brne	.+6      	; 0x6c0 <__addsf3+0x24>
 6ba:	26 f4       	brtc	.+8      	; 0x6c4 <__addsf3+0x28>
 6bc:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_nan>
 6c0:	0e f4       	brtc	.+2      	; 0x6c4 <__addsf3+0x28>
 6c2:	e0 95       	com	r30
 6c4:	e7 fb       	bst	r30, 7
 6c6:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>

000006ca <__addsf3x>:
 6ca:	e9 2f       	mov	r30, r25
 6cc:	0e 94 b3 04 	call	0x966	; 0x966 <__fp_split3>
 6d0:	58 f3       	brcs	.-42     	; 0x6a8 <__addsf3+0xc>
 6d2:	ba 17       	cp	r27, r26
 6d4:	62 07       	cpc	r22, r18
 6d6:	73 07       	cpc	r23, r19
 6d8:	84 07       	cpc	r24, r20
 6da:	95 07       	cpc	r25, r21
 6dc:	20 f0       	brcs	.+8      	; 0x6e6 <__addsf3x+0x1c>
 6de:	79 f4       	brne	.+30     	; 0x6fe <__addsf3x+0x34>
 6e0:	a6 f5       	brtc	.+104    	; 0x74a <__addsf3x+0x80>
 6e2:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__fp_zero>
 6e6:	0e f4       	brtc	.+2      	; 0x6ea <__addsf3x+0x20>
 6e8:	e0 95       	com	r30
 6ea:	0b 2e       	mov	r0, r27
 6ec:	ba 2f       	mov	r27, r26
 6ee:	a0 2d       	mov	r26, r0
 6f0:	0b 01       	movw	r0, r22
 6f2:	b9 01       	movw	r22, r18
 6f4:	90 01       	movw	r18, r0
 6f6:	0c 01       	movw	r0, r24
 6f8:	ca 01       	movw	r24, r20
 6fa:	a0 01       	movw	r20, r0
 6fc:	11 24       	eor	r1, r1
 6fe:	ff 27       	eor	r31, r31
 700:	59 1b       	sub	r21, r25
 702:	99 f0       	breq	.+38     	; 0x72a <__addsf3x+0x60>
 704:	59 3f       	cpi	r21, 0xF9	; 249
 706:	50 f4       	brcc	.+20     	; 0x71c <__addsf3x+0x52>
 708:	50 3e       	cpi	r21, 0xE0	; 224
 70a:	68 f1       	brcs	.+90     	; 0x766 <__addsf3x+0x9c>
 70c:	1a 16       	cp	r1, r26
 70e:	f0 40       	sbci	r31, 0x00	; 0
 710:	a2 2f       	mov	r26, r18
 712:	23 2f       	mov	r18, r19
 714:	34 2f       	mov	r19, r20
 716:	44 27       	eor	r20, r20
 718:	58 5f       	subi	r21, 0xF8	; 248
 71a:	f3 cf       	rjmp	.-26     	; 0x702 <__addsf3x+0x38>
 71c:	46 95       	lsr	r20
 71e:	37 95       	ror	r19
 720:	27 95       	ror	r18
 722:	a7 95       	ror	r26
 724:	f0 40       	sbci	r31, 0x00	; 0
 726:	53 95       	inc	r21
 728:	c9 f7       	brne	.-14     	; 0x71c <__addsf3x+0x52>
 72a:	7e f4       	brtc	.+30     	; 0x74a <__addsf3x+0x80>
 72c:	1f 16       	cp	r1, r31
 72e:	ba 0b       	sbc	r27, r26
 730:	62 0b       	sbc	r22, r18
 732:	73 0b       	sbc	r23, r19
 734:	84 0b       	sbc	r24, r20
 736:	ba f0       	brmi	.+46     	; 0x766 <__addsf3x+0x9c>
 738:	91 50       	subi	r25, 0x01	; 1
 73a:	a1 f0       	breq	.+40     	; 0x764 <__addsf3x+0x9a>
 73c:	ff 0f       	add	r31, r31
 73e:	bb 1f       	adc	r27, r27
 740:	66 1f       	adc	r22, r22
 742:	77 1f       	adc	r23, r23
 744:	88 1f       	adc	r24, r24
 746:	c2 f7       	brpl	.-16     	; 0x738 <__addsf3x+0x6e>
 748:	0e c0       	rjmp	.+28     	; 0x766 <__addsf3x+0x9c>
 74a:	ba 0f       	add	r27, r26
 74c:	62 1f       	adc	r22, r18
 74e:	73 1f       	adc	r23, r19
 750:	84 1f       	adc	r24, r20
 752:	48 f4       	brcc	.+18     	; 0x766 <__addsf3x+0x9c>
 754:	87 95       	ror	r24
 756:	77 95       	ror	r23
 758:	67 95       	ror	r22
 75a:	b7 95       	ror	r27
 75c:	f7 95       	ror	r31
 75e:	9e 3f       	cpi	r25, 0xFE	; 254
 760:	08 f0       	brcs	.+2      	; 0x764 <__addsf3x+0x9a>
 762:	b0 cf       	rjmp	.-160    	; 0x6c4 <__addsf3+0x28>
 764:	93 95       	inc	r25
 766:	88 0f       	add	r24, r24
 768:	08 f0       	brcs	.+2      	; 0x76c <__addsf3x+0xa2>
 76a:	99 27       	eor	r25, r25
 76c:	ee 0f       	add	r30, r30
 76e:	97 95       	ror	r25
 770:	87 95       	ror	r24
 772:	08 95       	ret

00000774 <__cmpsf2>:
 774:	0e 94 67 04 	call	0x8ce	; 0x8ce <__fp_cmp>
 778:	08 f4       	brcc	.+2      	; 0x77c <__cmpsf2+0x8>
 77a:	81 e0       	ldi	r24, 0x01	; 1
 77c:	08 95       	ret

0000077e <__divsf3>:
 77e:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <__divsf3x>
 782:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_round>
 786:	0e 94 9b 04 	call	0x936	; 0x936 <__fp_pscB>
 78a:	58 f0       	brcs	.+22     	; 0x7a2 <__divsf3+0x24>
 78c:	0e 94 94 04 	call	0x928	; 0x928 <__fp_pscA>
 790:	40 f0       	brcs	.+16     	; 0x7a2 <__divsf3+0x24>
 792:	29 f4       	brne	.+10     	; 0x79e <__divsf3+0x20>
 794:	5f 3f       	cpi	r21, 0xFF	; 255
 796:	29 f0       	breq	.+10     	; 0x7a2 <__divsf3+0x24>
 798:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
 79c:	51 11       	cpse	r21, r1
 79e:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>
 7a2:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_nan>

000007a6 <__divsf3x>:
 7a6:	0e 94 b3 04 	call	0x966	; 0x966 <__fp_split3>
 7aa:	68 f3       	brcs	.-38     	; 0x786 <__divsf3+0x8>

000007ac <__divsf3_pse>:
 7ac:	99 23       	and	r25, r25
 7ae:	b1 f3       	breq	.-20     	; 0x79c <__divsf3+0x1e>
 7b0:	55 23       	and	r21, r21
 7b2:	91 f3       	breq	.-28     	; 0x798 <__divsf3+0x1a>
 7b4:	95 1b       	sub	r25, r21
 7b6:	55 0b       	sbc	r21, r21
 7b8:	bb 27       	eor	r27, r27
 7ba:	aa 27       	eor	r26, r26
 7bc:	62 17       	cp	r22, r18
 7be:	73 07       	cpc	r23, r19
 7c0:	84 07       	cpc	r24, r20
 7c2:	38 f0       	brcs	.+14     	; 0x7d2 <__divsf3_pse+0x26>
 7c4:	9f 5f       	subi	r25, 0xFF	; 255
 7c6:	5f 4f       	sbci	r21, 0xFF	; 255
 7c8:	22 0f       	add	r18, r18
 7ca:	33 1f       	adc	r19, r19
 7cc:	44 1f       	adc	r20, r20
 7ce:	aa 1f       	adc	r26, r26
 7d0:	a9 f3       	breq	.-22     	; 0x7bc <__divsf3_pse+0x10>
 7d2:	35 d0       	rcall	.+106    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 7d4:	0e 2e       	mov	r0, r30
 7d6:	3a f0       	brmi	.+14     	; 0x7e6 <__divsf3_pse+0x3a>
 7d8:	e0 e8       	ldi	r30, 0x80	; 128
 7da:	32 d0       	rcall	.+100    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 7dc:	91 50       	subi	r25, 0x01	; 1
 7de:	50 40       	sbci	r21, 0x00	; 0
 7e0:	e6 95       	lsr	r30
 7e2:	00 1c       	adc	r0, r0
 7e4:	ca f7       	brpl	.-14     	; 0x7d8 <__divsf3_pse+0x2c>
 7e6:	2b d0       	rcall	.+86     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 7e8:	fe 2f       	mov	r31, r30
 7ea:	29 d0       	rcall	.+82     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 7ec:	66 0f       	add	r22, r22
 7ee:	77 1f       	adc	r23, r23
 7f0:	88 1f       	adc	r24, r24
 7f2:	bb 1f       	adc	r27, r27
 7f4:	26 17       	cp	r18, r22
 7f6:	37 07       	cpc	r19, r23
 7f8:	48 07       	cpc	r20, r24
 7fa:	ab 07       	cpc	r26, r27
 7fc:	b0 e8       	ldi	r27, 0x80	; 128
 7fe:	09 f0       	breq	.+2      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 800:	bb 0b       	sbc	r27, r27
 802:	80 2d       	mov	r24, r0
 804:	bf 01       	movw	r22, r30
 806:	ff 27       	eor	r31, r31
 808:	93 58       	subi	r25, 0x83	; 131
 80a:	5f 4f       	sbci	r21, 0xFF	; 255
 80c:	3a f0       	brmi	.+14     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 80e:	9e 3f       	cpi	r25, 0xFE	; 254
 810:	51 05       	cpc	r21, r1
 812:	78 f0       	brcs	.+30     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 814:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
 818:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>
 81c:	5f 3f       	cpi	r21, 0xFF	; 255
 81e:	e4 f3       	brlt	.-8      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 820:	98 3e       	cpi	r25, 0xE8	; 232
 822:	d4 f3       	brlt	.-12     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 824:	86 95       	lsr	r24
 826:	77 95       	ror	r23
 828:	67 95       	ror	r22
 82a:	b7 95       	ror	r27
 82c:	f7 95       	ror	r31
 82e:	9f 5f       	subi	r25, 0xFF	; 255
 830:	c9 f7       	brne	.-14     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 832:	88 0f       	add	r24, r24
 834:	91 1d       	adc	r25, r1
 836:	96 95       	lsr	r25
 838:	87 95       	ror	r24
 83a:	97 f9       	bld	r25, 7
 83c:	08 95       	ret
 83e:	e1 e0       	ldi	r30, 0x01	; 1
 840:	66 0f       	add	r22, r22
 842:	77 1f       	adc	r23, r23
 844:	88 1f       	adc	r24, r24
 846:	bb 1f       	adc	r27, r27
 848:	62 17       	cp	r22, r18
 84a:	73 07       	cpc	r23, r19
 84c:	84 07       	cpc	r24, r20
 84e:	ba 07       	cpc	r27, r26
 850:	20 f0       	brcs	.+8      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 852:	62 1b       	sub	r22, r18
 854:	73 0b       	sbc	r23, r19
 856:	84 0b       	sbc	r24, r20
 858:	ba 0b       	sbc	r27, r26
 85a:	ee 1f       	adc	r30, r30
 85c:	88 f7       	brcc	.-30     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 85e:	e0 95       	com	r30
 860:	08 95       	ret

00000862 <__fixsfsi>:
 862:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
 866:	68 94       	set
 868:	b1 11       	cpse	r27, r1
 86a:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>
 86e:	08 95       	ret

00000870 <__fixunssfsi>:
 870:	0e 94 bb 04 	call	0x976	; 0x976 <__fp_splitA>
 874:	88 f0       	brcs	.+34     	; 0x898 <__fixunssfsi+0x28>
 876:	9f 57       	subi	r25, 0x7F	; 127
 878:	98 f0       	brcs	.+38     	; 0x8a0 <__fixunssfsi+0x30>
 87a:	b9 2f       	mov	r27, r25
 87c:	99 27       	eor	r25, r25
 87e:	b7 51       	subi	r27, 0x17	; 23
 880:	b0 f0       	brcs	.+44     	; 0x8ae <__fixunssfsi+0x3e>
 882:	e1 f0       	breq	.+56     	; 0x8bc <__fixunssfsi+0x4c>
 884:	66 0f       	add	r22, r22
 886:	77 1f       	adc	r23, r23
 888:	88 1f       	adc	r24, r24
 88a:	99 1f       	adc	r25, r25
 88c:	1a f0       	brmi	.+6      	; 0x894 <__fixunssfsi+0x24>
 88e:	ba 95       	dec	r27
 890:	c9 f7       	brne	.-14     	; 0x884 <__fixunssfsi+0x14>
 892:	14 c0       	rjmp	.+40     	; 0x8bc <__fixunssfsi+0x4c>
 894:	b1 30       	cpi	r27, 0x01	; 1
 896:	91 f0       	breq	.+36     	; 0x8bc <__fixunssfsi+0x4c>
 898:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__fp_zero>
 89c:	b1 e0       	ldi	r27, 0x01	; 1
 89e:	08 95       	ret
 8a0:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__fp_zero>
 8a4:	67 2f       	mov	r22, r23
 8a6:	78 2f       	mov	r23, r24
 8a8:	88 27       	eor	r24, r24
 8aa:	b8 5f       	subi	r27, 0xF8	; 248
 8ac:	39 f0       	breq	.+14     	; 0x8bc <__fixunssfsi+0x4c>
 8ae:	b9 3f       	cpi	r27, 0xF9	; 249
 8b0:	cc f3       	brlt	.-14     	; 0x8a4 <__fixunssfsi+0x34>
 8b2:	86 95       	lsr	r24
 8b4:	77 95       	ror	r23
 8b6:	67 95       	ror	r22
 8b8:	b3 95       	inc	r27
 8ba:	d9 f7       	brne	.-10     	; 0x8b2 <__fixunssfsi+0x42>
 8bc:	3e f4       	brtc	.+14     	; 0x8cc <__fixunssfsi+0x5c>
 8be:	90 95       	com	r25
 8c0:	80 95       	com	r24
 8c2:	70 95       	com	r23
 8c4:	61 95       	neg	r22
 8c6:	7f 4f       	sbci	r23, 0xFF	; 255
 8c8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ca:	9f 4f       	sbci	r25, 0xFF	; 255
 8cc:	08 95       	ret

000008ce <__fp_cmp>:
 8ce:	99 0f       	add	r25, r25
 8d0:	00 08       	sbc	r0, r0
 8d2:	55 0f       	add	r21, r21
 8d4:	aa 0b       	sbc	r26, r26
 8d6:	e0 e8       	ldi	r30, 0x80	; 128
 8d8:	fe ef       	ldi	r31, 0xFE	; 254
 8da:	16 16       	cp	r1, r22
 8dc:	17 06       	cpc	r1, r23
 8de:	e8 07       	cpc	r30, r24
 8e0:	f9 07       	cpc	r31, r25
 8e2:	c0 f0       	brcs	.+48     	; 0x914 <__stack+0x15>
 8e4:	12 16       	cp	r1, r18
 8e6:	13 06       	cpc	r1, r19
 8e8:	e4 07       	cpc	r30, r20
 8ea:	f5 07       	cpc	r31, r21
 8ec:	98 f0       	brcs	.+38     	; 0x914 <__stack+0x15>
 8ee:	62 1b       	sub	r22, r18
 8f0:	73 0b       	sbc	r23, r19
 8f2:	84 0b       	sbc	r24, r20
 8f4:	95 0b       	sbc	r25, r21
 8f6:	39 f4       	brne	.+14     	; 0x906 <__stack+0x7>
 8f8:	0a 26       	eor	r0, r26
 8fa:	61 f0       	breq	.+24     	; 0x914 <__stack+0x15>
 8fc:	23 2b       	or	r18, r19
 8fe:	24 2b       	or	r18, r20
 900:	25 2b       	or	r18, r21
 902:	21 f4       	brne	.+8      	; 0x90c <__stack+0xd>
 904:	08 95       	ret
 906:	0a 26       	eor	r0, r26
 908:	09 f4       	brne	.+2      	; 0x90c <__stack+0xd>
 90a:	a1 40       	sbci	r26, 0x01	; 1
 90c:	a6 95       	lsr	r26
 90e:	8f ef       	ldi	r24, 0xFF	; 255
 910:	81 1d       	adc	r24, r1
 912:	81 1d       	adc	r24, r1
 914:	08 95       	ret

00000916 <__fp_inf>:
 916:	97 f9       	bld	r25, 7
 918:	9f 67       	ori	r25, 0x7F	; 127
 91a:	80 e8       	ldi	r24, 0x80	; 128
 91c:	70 e0       	ldi	r23, 0x00	; 0
 91e:	60 e0       	ldi	r22, 0x00	; 0
 920:	08 95       	ret

00000922 <__fp_nan>:
 922:	9f ef       	ldi	r25, 0xFF	; 255
 924:	80 ec       	ldi	r24, 0xC0	; 192
 926:	08 95       	ret

00000928 <__fp_pscA>:
 928:	00 24       	eor	r0, r0
 92a:	0a 94       	dec	r0
 92c:	16 16       	cp	r1, r22
 92e:	17 06       	cpc	r1, r23
 930:	18 06       	cpc	r1, r24
 932:	09 06       	cpc	r0, r25
 934:	08 95       	ret

00000936 <__fp_pscB>:
 936:	00 24       	eor	r0, r0
 938:	0a 94       	dec	r0
 93a:	12 16       	cp	r1, r18
 93c:	13 06       	cpc	r1, r19
 93e:	14 06       	cpc	r1, r20
 940:	05 06       	cpc	r0, r21
 942:	08 95       	ret

00000944 <__fp_round>:
 944:	09 2e       	mov	r0, r25
 946:	03 94       	inc	r0
 948:	00 0c       	add	r0, r0
 94a:	11 f4       	brne	.+4      	; 0x950 <__fp_round+0xc>
 94c:	88 23       	and	r24, r24
 94e:	52 f0       	brmi	.+20     	; 0x964 <__fp_round+0x20>
 950:	bb 0f       	add	r27, r27
 952:	40 f4       	brcc	.+16     	; 0x964 <__fp_round+0x20>
 954:	bf 2b       	or	r27, r31
 956:	11 f4       	brne	.+4      	; 0x95c <__fp_round+0x18>
 958:	60 ff       	sbrs	r22, 0
 95a:	04 c0       	rjmp	.+8      	; 0x964 <__fp_round+0x20>
 95c:	6f 5f       	subi	r22, 0xFF	; 255
 95e:	7f 4f       	sbci	r23, 0xFF	; 255
 960:	8f 4f       	sbci	r24, 0xFF	; 255
 962:	9f 4f       	sbci	r25, 0xFF	; 255
 964:	08 95       	ret

00000966 <__fp_split3>:
 966:	57 fd       	sbrc	r21, 7
 968:	90 58       	subi	r25, 0x80	; 128
 96a:	44 0f       	add	r20, r20
 96c:	55 1f       	adc	r21, r21
 96e:	59 f0       	breq	.+22     	; 0x986 <__fp_splitA+0x10>
 970:	5f 3f       	cpi	r21, 0xFF	; 255
 972:	71 f0       	breq	.+28     	; 0x990 <__fp_splitA+0x1a>
 974:	47 95       	ror	r20

00000976 <__fp_splitA>:
 976:	88 0f       	add	r24, r24
 978:	97 fb       	bst	r25, 7
 97a:	99 1f       	adc	r25, r25
 97c:	61 f0       	breq	.+24     	; 0x996 <__fp_splitA+0x20>
 97e:	9f 3f       	cpi	r25, 0xFF	; 255
 980:	79 f0       	breq	.+30     	; 0x9a0 <__fp_splitA+0x2a>
 982:	87 95       	ror	r24
 984:	08 95       	ret
 986:	12 16       	cp	r1, r18
 988:	13 06       	cpc	r1, r19
 98a:	14 06       	cpc	r1, r20
 98c:	55 1f       	adc	r21, r21
 98e:	f2 cf       	rjmp	.-28     	; 0x974 <__fp_split3+0xe>
 990:	46 95       	lsr	r20
 992:	f1 df       	rcall	.-30     	; 0x976 <__fp_splitA>
 994:	08 c0       	rjmp	.+16     	; 0x9a6 <__fp_splitA+0x30>
 996:	16 16       	cp	r1, r22
 998:	17 06       	cpc	r1, r23
 99a:	18 06       	cpc	r1, r24
 99c:	99 1f       	adc	r25, r25
 99e:	f1 cf       	rjmp	.-30     	; 0x982 <__fp_splitA+0xc>
 9a0:	86 95       	lsr	r24
 9a2:	71 05       	cpc	r23, r1
 9a4:	61 05       	cpc	r22, r1
 9a6:	08 94       	sec
 9a8:	08 95       	ret

000009aa <__fp_zero>:
 9aa:	e8 94       	clt

000009ac <__fp_szero>:
 9ac:	bb 27       	eor	r27, r27
 9ae:	66 27       	eor	r22, r22
 9b0:	77 27       	eor	r23, r23
 9b2:	cb 01       	movw	r24, r22
 9b4:	97 f9       	bld	r25, 7
 9b6:	08 95       	ret

000009b8 <__gesf2>:
 9b8:	0e 94 67 04 	call	0x8ce	; 0x8ce <__fp_cmp>
 9bc:	08 f4       	brcc	.+2      	; 0x9c0 <__gesf2+0x8>
 9be:	8f ef       	ldi	r24, 0xFF	; 255
 9c0:	08 95       	ret

000009c2 <__mulsf3>:
 9c2:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__mulsf3x>
 9c6:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_round>
 9ca:	0e 94 94 04 	call	0x928	; 0x928 <__fp_pscA>
 9ce:	38 f0       	brcs	.+14     	; 0x9de <__mulsf3+0x1c>
 9d0:	0e 94 9b 04 	call	0x936	; 0x936 <__fp_pscB>
 9d4:	20 f0       	brcs	.+8      	; 0x9de <__mulsf3+0x1c>
 9d6:	95 23       	and	r25, r21
 9d8:	11 f0       	breq	.+4      	; 0x9de <__mulsf3+0x1c>
 9da:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
 9de:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_nan>
 9e2:	11 24       	eor	r1, r1
 9e4:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>

000009e8 <__mulsf3x>:
 9e8:	0e 94 b3 04 	call	0x966	; 0x966 <__fp_split3>
 9ec:	70 f3       	brcs	.-36     	; 0x9ca <__mulsf3+0x8>

000009ee <__mulsf3_pse>:
 9ee:	95 9f       	mul	r25, r21
 9f0:	c1 f3       	breq	.-16     	; 0x9e2 <__mulsf3+0x20>
 9f2:	95 0f       	add	r25, r21
 9f4:	50 e0       	ldi	r21, 0x00	; 0
 9f6:	55 1f       	adc	r21, r21
 9f8:	62 9f       	mul	r22, r18
 9fa:	f0 01       	movw	r30, r0
 9fc:	72 9f       	mul	r23, r18
 9fe:	bb 27       	eor	r27, r27
 a00:	f0 0d       	add	r31, r0
 a02:	b1 1d       	adc	r27, r1
 a04:	63 9f       	mul	r22, r19
 a06:	aa 27       	eor	r26, r26
 a08:	f0 0d       	add	r31, r0
 a0a:	b1 1d       	adc	r27, r1
 a0c:	aa 1f       	adc	r26, r26
 a0e:	64 9f       	mul	r22, r20
 a10:	66 27       	eor	r22, r22
 a12:	b0 0d       	add	r27, r0
 a14:	a1 1d       	adc	r26, r1
 a16:	66 1f       	adc	r22, r22
 a18:	82 9f       	mul	r24, r18
 a1a:	22 27       	eor	r18, r18
 a1c:	b0 0d       	add	r27, r0
 a1e:	a1 1d       	adc	r26, r1
 a20:	62 1f       	adc	r22, r18
 a22:	73 9f       	mul	r23, r19
 a24:	b0 0d       	add	r27, r0
 a26:	a1 1d       	adc	r26, r1
 a28:	62 1f       	adc	r22, r18
 a2a:	83 9f       	mul	r24, r19
 a2c:	a0 0d       	add	r26, r0
 a2e:	61 1d       	adc	r22, r1
 a30:	22 1f       	adc	r18, r18
 a32:	74 9f       	mul	r23, r20
 a34:	33 27       	eor	r19, r19
 a36:	a0 0d       	add	r26, r0
 a38:	61 1d       	adc	r22, r1
 a3a:	23 1f       	adc	r18, r19
 a3c:	84 9f       	mul	r24, r20
 a3e:	60 0d       	add	r22, r0
 a40:	21 1d       	adc	r18, r1
 a42:	82 2f       	mov	r24, r18
 a44:	76 2f       	mov	r23, r22
 a46:	6a 2f       	mov	r22, r26
 a48:	11 24       	eor	r1, r1
 a4a:	9f 57       	subi	r25, 0x7F	; 127
 a4c:	50 40       	sbci	r21, 0x00	; 0
 a4e:	9a f0       	brmi	.+38     	; 0xa76 <__mulsf3_pse+0x88>
 a50:	f1 f0       	breq	.+60     	; 0xa8e <__mulsf3_pse+0xa0>
 a52:	88 23       	and	r24, r24
 a54:	4a f0       	brmi	.+18     	; 0xa68 <__mulsf3_pse+0x7a>
 a56:	ee 0f       	add	r30, r30
 a58:	ff 1f       	adc	r31, r31
 a5a:	bb 1f       	adc	r27, r27
 a5c:	66 1f       	adc	r22, r22
 a5e:	77 1f       	adc	r23, r23
 a60:	88 1f       	adc	r24, r24
 a62:	91 50       	subi	r25, 0x01	; 1
 a64:	50 40       	sbci	r21, 0x00	; 0
 a66:	a9 f7       	brne	.-22     	; 0xa52 <__mulsf3_pse+0x64>
 a68:	9e 3f       	cpi	r25, 0xFE	; 254
 a6a:	51 05       	cpc	r21, r1
 a6c:	80 f0       	brcs	.+32     	; 0xa8e <__mulsf3_pse+0xa0>
 a6e:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
 a72:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>
 a76:	5f 3f       	cpi	r21, 0xFF	; 255
 a78:	e4 f3       	brlt	.-8      	; 0xa72 <__mulsf3_pse+0x84>
 a7a:	98 3e       	cpi	r25, 0xE8	; 232
 a7c:	d4 f3       	brlt	.-12     	; 0xa72 <__mulsf3_pse+0x84>
 a7e:	86 95       	lsr	r24
 a80:	77 95       	ror	r23
 a82:	67 95       	ror	r22
 a84:	b7 95       	ror	r27
 a86:	f7 95       	ror	r31
 a88:	e7 95       	ror	r30
 a8a:	9f 5f       	subi	r25, 0xFF	; 255
 a8c:	c1 f7       	brne	.-16     	; 0xa7e <__mulsf3_pse+0x90>
 a8e:	fe 2b       	or	r31, r30
 a90:	88 0f       	add	r24, r24
 a92:	91 1d       	adc	r25, r1
 a94:	96 95       	lsr	r25
 a96:	87 95       	ror	r24
 a98:	97 f9       	bld	r25, 7
 a9a:	08 95       	ret

00000a9c <__itoa_ncheck>:
 a9c:	bb 27       	eor	r27, r27
 a9e:	4a 30       	cpi	r20, 0x0A	; 10
 aa0:	31 f4       	brne	.+12     	; 0xaae <__itoa_ncheck+0x12>
 aa2:	99 23       	and	r25, r25
 aa4:	22 f4       	brpl	.+8      	; 0xaae <__itoa_ncheck+0x12>
 aa6:	bd e2       	ldi	r27, 0x2D	; 45
 aa8:	90 95       	com	r25
 aaa:	81 95       	neg	r24
 aac:	9f 4f       	sbci	r25, 0xFF	; 255
 aae:	0c 94 5a 05 	jmp	0xab4	; 0xab4 <__utoa_common>

00000ab2 <__utoa_ncheck>:
 ab2:	bb 27       	eor	r27, r27

00000ab4 <__utoa_common>:
 ab4:	fb 01       	movw	r30, r22
 ab6:	55 27       	eor	r21, r21
 ab8:	aa 27       	eor	r26, r26
 aba:	88 0f       	add	r24, r24
 abc:	99 1f       	adc	r25, r25
 abe:	aa 1f       	adc	r26, r26
 ac0:	a4 17       	cp	r26, r20
 ac2:	10 f0       	brcs	.+4      	; 0xac8 <__utoa_common+0x14>
 ac4:	a4 1b       	sub	r26, r20
 ac6:	83 95       	inc	r24
 ac8:	50 51       	subi	r21, 0x10	; 16
 aca:	b9 f7       	brne	.-18     	; 0xaba <__utoa_common+0x6>
 acc:	a0 5d       	subi	r26, 0xD0	; 208
 ace:	aa 33       	cpi	r26, 0x3A	; 58
 ad0:	08 f0       	brcs	.+2      	; 0xad4 <__utoa_common+0x20>
 ad2:	a9 5d       	subi	r26, 0xD9	; 217
 ad4:	a1 93       	st	Z+, r26
 ad6:	00 97       	sbiw	r24, 0x00	; 0
 ad8:	79 f7       	brne	.-34     	; 0xab8 <__utoa_common+0x4>
 ada:	b1 11       	cpse	r27, r1
 adc:	b1 93       	st	Z+, r27
 ade:	11 92       	st	Z+, r1
 ae0:	cb 01       	movw	r24, r22
 ae2:	0c 94 73 05 	jmp	0xae6	; 0xae6 <strrev>

00000ae6 <strrev>:
 ae6:	dc 01       	movw	r26, r24
 ae8:	fc 01       	movw	r30, r24
 aea:	67 2f       	mov	r22, r23
 aec:	71 91       	ld	r23, Z+
 aee:	77 23       	and	r23, r23
 af0:	e1 f7       	brne	.-8      	; 0xaea <strrev+0x4>
 af2:	32 97       	sbiw	r30, 0x02	; 2
 af4:	04 c0       	rjmp	.+8      	; 0xafe <strrev+0x18>
 af6:	7c 91       	ld	r23, X
 af8:	6d 93       	st	X+, r22
 afa:	70 83       	st	Z, r23
 afc:	62 91       	ld	r22, -Z
 afe:	ae 17       	cp	r26, r30
 b00:	bf 07       	cpc	r27, r31
 b02:	c8 f3       	brcs	.-14     	; 0xaf6 <strrev+0x10>
 b04:	08 95       	ret

00000b06 <_exit>:
 b06:	f8 94       	cli

00000b08 <__stop_program>:
 b08:	ff cf       	rjmp	.-2      	; 0xb08 <__stop_program>
