
Interrupcion2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00000444  000004d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000444  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800152  00800152  0000052a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000052a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000055c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  0000059c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cc6  00000000  00000000  0000068c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088b  00000000  00000000  00003352  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d64  00000000  00000000  00003bdd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000022c  00000000  00000000  00004944  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053a  00000000  00000000  00004b70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000020b1  00000000  00000000  000050aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000715b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e4       	ldi	r30, 0x44	; 68
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 35       	cpi	r26, 0x52	; 82
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e5       	ldi	r26, 0x52	; 82
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 36       	cpi	r26, 0x60	; 96
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 46 01 	call	0x28c	; 0x28c <main>
  9e:	0c 94 20 02 	jmp	0x440	; 0x440 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ENVIA_CMD>:
	// _delay_ms(500);
	// ENVIA_DATO(7);
	// CURSOR_IZQ_CORRE();
	// _delay_ms(500);
	// LIMPIA_LCD();
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	96 95       	lsr	r25
  ac:	96 95       	lsr	r25
  ae:	98 b9       	out	0x08, r25	; 8
  b0:	98 b1       	in	r25, 0x08	; 8
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	98 b9       	out	0x08, r25	; 8
  b6:	98 b1       	in	r25, 0x08	; 8
  b8:	92 60       	ori	r25, 0x02	; 2
  ba:	98 b9       	out	0x08, r25	; 8
  bc:	ef e9       	ldi	r30, 0x9F	; 159
  be:	ff e0       	ldi	r31, 0x0F	; 15
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <ENVIA_CMD+0x1a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <ENVIA_CMD+0x20>
  c6:	00 00       	nop
  c8:	98 b1       	in	r25, 0x08	; 8
  ca:	9d 7f       	andi	r25, 0xFD	; 253
  cc:	98 b9       	out	0x08, r25	; 8
  ce:	ef e3       	ldi	r30, 0x3F	; 63
  d0:	fc e9       	ldi	r31, 0x9C	; 156
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <ENVIA_CMD+0x2c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <ENVIA_CMD+0x32>
  d8:	00 00       	nop
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	8c 73       	andi	r24, 0x3C	; 60
  e6:	88 b9       	out	0x08, r24	; 8
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	88 b9       	out	0x08, r24	; 8
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	88 b9       	out	0x08, r24	; 8
  f4:	8f e9       	ldi	r24, 0x9F	; 159
  f6:	9f e0       	ldi	r25, 0x0F	; 15
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <ENVIA_CMD+0x52>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <ENVIA_CMD+0x58>
  fe:	00 00       	nop
 100:	88 b1       	in	r24, 0x08	; 8
 102:	8d 7f       	andi	r24, 0xFD	; 253
 104:	88 b9       	out	0x08, r24	; 8
 106:	ef e3       	ldi	r30, 0x3F	; 63
 108:	fc e9       	ldi	r31, 0x9C	; 156
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <ENVIA_CMD+0x64>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <ENVIA_CMD+0x6a>
 110:	00 00       	nop
 112:	08 95       	ret

00000114 <LCD_INICIALIZA>:
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 11a:	88 e2       	ldi	r24, 0x28	; 40
 11c:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 120:	8e e0       	ldi	r24, 0x0E	; 14
 122:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 132:	80 e8       	ldi	r24, 0x80	; 128
 134:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 138:	08 95       	ret

0000013a <ENVIA_DATO>:
 13a:	98 2f       	mov	r25, r24
 13c:	90 7f       	andi	r25, 0xF0	; 240
 13e:	96 95       	lsr	r25
 140:	96 95       	lsr	r25
 142:	98 b9       	out	0x08, r25	; 8
 144:	98 b1       	in	r25, 0x08	; 8
 146:	93 60       	ori	r25, 0x03	; 3
 148:	98 b9       	out	0x08, r25	; 8
 14a:	ef e9       	ldi	r30, 0x9F	; 159
 14c:	ff e0       	ldi	r31, 0x0F	; 15
 14e:	31 97       	sbiw	r30, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <ENVIA_DATO+0x14>
 152:	00 c0       	rjmp	.+0      	; 0x154 <ENVIA_DATO+0x1a>
 154:	00 00       	nop
 156:	98 b1       	in	r25, 0x08	; 8
 158:	9d 7f       	andi	r25, 0xFD	; 253
 15a:	98 b9       	out	0x08, r25	; 8
 15c:	98 b1       	in	r25, 0x08	; 8
 15e:	9e 7f       	andi	r25, 0xFE	; 254
 160:	98 b9       	out	0x08, r25	; 8
 162:	ef e3       	ldi	r30, 0x3F	; 63
 164:	fc e9       	ldi	r31, 0x9C	; 156
 166:	31 97       	sbiw	r30, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <ENVIA_DATO+0x2c>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <ENVIA_DATO+0x32>
 16c:	00 00       	nop
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	8c 73       	andi	r24, 0x3C	; 60
 17a:	88 b9       	out	0x08, r24	; 8
 17c:	88 b1       	in	r24, 0x08	; 8
 17e:	83 60       	ori	r24, 0x03	; 3
 180:	88 b9       	out	0x08, r24	; 8
 182:	8f e9       	ldi	r24, 0x9F	; 159
 184:	9f e0       	ldi	r25, 0x0F	; 15
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <ENVIA_DATO+0x4c>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <ENVIA_DATO+0x52>
 18c:	00 00       	nop
 18e:	88 b1       	in	r24, 0x08	; 8
 190:	8d 7f       	andi	r24, 0xFD	; 253
 192:	88 b9       	out	0x08, r24	; 8
 194:	88 b1       	in	r24, 0x08	; 8
 196:	8e 7f       	andi	r24, 0xFE	; 254
 198:	88 b9       	out	0x08, r24	; 8
 19a:	ef e3       	ldi	r30, 0x3F	; 63
 19c:	fc e9       	ldi	r31, 0x9C	; 156
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <ENVIA_DATO+0x64>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <ENVIA_DATO+0x6a>
 1a4:	00 00       	nop
 1a6:	08 95       	ret

000001a8 <ENVIA_CADENA>:
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	8c 01       	movw	r16, r24
 1b2:	c0 e0       	ldi	r28, 0x00	; 0
 1b4:	d0 e0       	ldi	r29, 0x00	; 0
 1b6:	03 c0       	rjmp	.+6      	; 0x1be <ENVIA_CADENA+0x16>
 1b8:	0e 94 9d 00 	call	0x13a	; 0x13a <ENVIA_DATO>
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	f8 01       	movw	r30, r16
 1c0:	ec 0f       	add	r30, r28
 1c2:	fd 1f       	adc	r31, r29
 1c4:	80 81       	ld	r24, Z
 1c6:	81 11       	cpse	r24, r1
 1c8:	f7 cf       	rjmp	.-18     	; 0x1b8 <ENVIA_CADENA+0x10>
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	0f 91       	pop	r16
 1d2:	08 95       	ret

000001d4 <LIMPIA_LCD>:
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1da:	08 95       	ret

000001dc <REGRESO_CASA>:
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1e2:	08 95       	ret

000001e4 <POS_LINEA1>:
 1e4:	80 68       	ori	r24, 0x80	; 128
 1e6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1ea:	08 95       	ret

000001ec <POS_LINEA2>:
 1ec:	80 6c       	ori	r24, 0xC0	; 192
 1ee:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1f2:	08 95       	ret

000001f4 <__vector_16>:
#include <string.h>

int of = 0;
int count = 0;
char buffer[10];
ISR(TIMER0_OVF_vect){
 1f4:	1f 92       	push	r1
 1f6:	0f 92       	push	r0
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	0f 92       	push	r0
 1fc:	11 24       	eor	r1, r1
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
	PORTD = 0b10000000;
 216:	80 e8       	ldi	r24, 0x80	; 128
 218:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21a:	2f ef       	ldi	r18, 0xFF	; 255
 21c:	89 e6       	ldi	r24, 0x69	; 105
 21e:	98 e1       	ldi	r25, 0x18	; 24
 220:	21 50       	subi	r18, 0x01	; 1
 222:	80 40       	sbci	r24, 0x00	; 0
 224:	90 40       	sbci	r25, 0x00	; 0
 226:	e1 f7       	brne	.-8      	; 0x220 <__vector_16+0x2c>
 228:	00 c0       	rjmp	.+0      	; 0x22a <__vector_16+0x36>
 22a:	00 00       	nop
	_delay_ms(500);
	PORTD = 0x00;
 22c:	1b b8       	out	0x0b, r1	; 11
	LIMPIA_LCD();
 22e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
	POS_LINEA1(3);
 232:	83 e0       	ldi	r24, 0x03	; 3
 234:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <POS_LINEA1>
	ENVIA_CADENA("Ya estas pdo");
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
 240:	2f ef       	ldi	r18, 0xFF	; 255
 242:	83 ed       	ldi	r24, 0xD3	; 211
 244:	90 e3       	ldi	r25, 0x30	; 48
 246:	21 50       	subi	r18, 0x01	; 1
 248:	80 40       	sbci	r24, 0x00	; 0
 24a:	90 40       	sbci	r25, 0x00	; 0
 24c:	e1 f7       	brne	.-8      	; 0x246 <__vector_16+0x52>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <__vector_16+0x5c>
 250:	00 00       	nop
	_delay_ms(1000);
	of = 1;
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <of+0x1>
 25a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <of>
	count = 0;
 25e:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <__data_end+0x1>
 262:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__data_end>
	TCNT0 = 255;
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	86 bd       	out	0x26, r24	; 38
}
 26a:	ff 91       	pop	r31
 26c:	ef 91       	pop	r30
 26e:	bf 91       	pop	r27
 270:	af 91       	pop	r26
 272:	9f 91       	pop	r25
 274:	8f 91       	pop	r24
 276:	7f 91       	pop	r23
 278:	6f 91       	pop	r22
 27a:	5f 91       	pop	r21
 27c:	4f 91       	pop	r20
 27e:	3f 91       	pop	r19
 280:	2f 91       	pop	r18
 282:	0f 90       	pop	r0
 284:	0f be       	out	0x3f, r0	; 63
 286:	0f 90       	pop	r0
 288:	1f 90       	pop	r1
 28a:	18 95       	reti

0000028c <main>:

int main(void)
{
	int indice;			//SELECTOR DE PUSH (PD1,PD2,PD3)
	int indice2;			//SELECTOR DE PUSH (PD1,PD2,PD3)
	cli();
 28c:	f8 94       	cli
	TCCR0B=(1<<CS02)|(1<<CS01)|(1<<CS00); //RELOJ FLANCO DE SUBIDA
 28e:	87 e0       	ldi	r24, 0x07	; 7
 290:	85 bd       	out	0x25, r24	; 37
	TIMSK0=(1<<TOIE0);	//HABILITA LA INTERRUPCIÓN POR SOBREFLUJO DEL TIMER 0
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	DDRD = 0b10000000;		//PARA INT EXTERNA Y CONFIGURACION DE CONTEO
 298:	80 e8       	ldi	r24, 0x80	; 128
 29a:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0x00;		//PARA LED
 29c:	14 b8       	out	0x04, r1	; 4
	DDRC = 0xFF;		//LCD
 29e:	8f ef       	ldi	r24, 0xFF	; 255
 2a0:	87 b9       	out	0x07, r24	; 7
	TCNT0 = 255;
 2a2:	86 bd       	out	0x26, r24	; 38
	sei();
 2a4:	78 94       	sei
	LCD_INICIALIZA();
 2a6:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_INICIALIZA>
	LIMPIA_LCD();
 2aa:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
	REGRESO_CASA();
 2ae:	0e 94 ee 00 	call	0x1dc	; 0x1dc <REGRESO_CASA>
	while(1)
	{
		of = 0;
 2b2:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <of+0x1>
 2b6:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <of>
		LIMPIA_LCD();
 2ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
		POS_LINEA1(1);
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <POS_LINEA1>
		ENVIA_CADENA("Cuantas chelas?");
 2c4:	8d e0       	ldi	r24, 0x0D	; 13
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		POS_LINEA2(2);
 2cc:	82 e0       	ldi	r24, 0x02	; 2
 2ce:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA2>
		ENVIA_CADENA("A:2 B:4 C:6");
 2d2:	8d e1       	ldi	r24, 0x1D	; 29
 2d4:	91 e0       	ldi	r25, 0x01	; 1
 2d6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		while (of==0)
 2da:	42 c0       	rjmp	.+132    	; 0x360 <main+0xd4>
		{
			indice = PINB & 0b1110;
 2dc:	83 b1       	in	r24, 0x03	; 3
 2de:	8e 70       	andi	r24, 0x0E	; 14
 2e0:	90 e0       	ldi	r25, 0x00	; 0
			indice = indice >> 1;
 2e2:	95 95       	asr	r25
 2e4:	87 95       	ror	r24
			switch(indice)
 2e6:	82 30       	cpi	r24, 0x02	; 2
 2e8:	91 05       	cpc	r25, r1
 2ea:	b9 f0       	breq	.+46     	; 0x31a <main+0x8e>
 2ec:	84 30       	cpi	r24, 0x04	; 4
 2ee:	91 05       	cpc	r25, r1
 2f0:	31 f1       	breq	.+76     	; 0x33e <main+0xb2>
 2f2:	01 97       	sbiw	r24, 0x01	; 1
 2f4:	a9 f5       	brne	.+106    	; 0x360 <main+0xd4>
			{
				case 1:
					LIMPIA_LCD();
 2f6:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
					POS_LINEA1(3);
 2fa:	83 e0       	ldi	r24, 0x03	; 3
 2fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <POS_LINEA1>
					ENVIA_CADENA("Ahi van 2");
 300:	89 e2       	ldi	r24, 0x29	; 41
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
					TCNT0 = 255-2;
 308:	8d ef       	ldi	r24, 0xFD	; 253
 30a:	86 bd       	out	0x26, r24	; 38
					of = 1;
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <of+0x1>
 314:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <of>
				break;
 318:	23 c0       	rjmp	.+70     	; 0x360 <main+0xd4>
				case 2:
					LIMPIA_LCD();
 31a:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
					POS_LINEA1(3);
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <POS_LINEA1>
					ENVIA_CADENA("Ahi van 4");
 324:	83 e3       	ldi	r24, 0x33	; 51
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
					TCNT0 = 255-4;
 32c:	8b ef       	ldi	r24, 0xFB	; 251
 32e:	86 bd       	out	0x26, r24	; 38
					of = 1;
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <of+0x1>
 338:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <of>
				break;
 33c:	11 c0       	rjmp	.+34     	; 0x360 <main+0xd4>
				case 4:
					LIMPIA_LCD();
 33e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
					POS_LINEA1(3);
 342:	83 e0       	ldi	r24, 0x03	; 3
 344:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <POS_LINEA1>
					ENVIA_CADENA("Ahi van 6");
 348:	8d e3       	ldi	r24, 0x3D	; 61
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
					TCNT0 = 255-6;
 350:	89 ef       	ldi	r24, 0xF9	; 249
 352:	86 bd       	out	0x26, r24	; 38
					of = 1;
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <of+0x1>
 35c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <of>
		LIMPIA_LCD();
		POS_LINEA1(1);
		ENVIA_CADENA("Cuantas chelas?");
		POS_LINEA2(2);
		ENVIA_CADENA("A:2 B:4 C:6");
		while (of==0)
 360:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <of>
 364:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <of+0x1>
 368:	89 2b       	or	r24, r25
 36a:	09 f4       	brne	.+2      	; 0x36e <main+0xe2>
 36c:	b7 cf       	rjmp	.-146    	; 0x2dc <main+0x50>
					TCNT0 = 255-6;
					of = 1;
				break;
			}
		}
		of = 0;
 36e:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <of+0x1>
 372:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <of>
		POS_LINEA2(0);
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA2>
		ENVIA_CADENA("Llevas: 0");
 37c:	87 e4       	ldi	r24, 0x47	; 71
 37e:	91 e0       	ldi	r25, 0x01	; 1
 380:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
		while(of==0)
 384:	21 c0       	rjmp	.+66     	; 0x3c8 <main+0x13c>
		{
			indice2 = PIND & 0b10000;
 386:	89 b1       	in	r24, 0x09	; 9
 388:	2f ef       	ldi	r18, 0xFF	; 255
 38a:	32 e5       	ldi	r19, 0x52	; 82
 38c:	97 e0       	ldi	r25, 0x07	; 7
 38e:	21 50       	subi	r18, 0x01	; 1
 390:	30 40       	sbci	r19, 0x00	; 0
 392:	90 40       	sbci	r25, 0x00	; 0
 394:	e1 f7       	brne	.-8      	; 0x38e <main+0x102>
 396:	00 c0       	rjmp	.+0      	; 0x398 <main+0x10c>
 398:	00 00       	nop
			_delay_ms(150);
			//if (indice==16)
			switch(indice2)
 39a:	84 ff       	sbrs	r24, 4
 39c:	15 c0       	rjmp	.+42     	; 0x3c8 <main+0x13c>
			{
			case 16:
				POS_LINEA2(8);
 39e:	88 e0       	ldi	r24, 0x08	; 8
 3a0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA2>
				count = count + 1;
 3a4:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
 3a8:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <__data_end+0x1>
 3ac:	01 96       	adiw	r24, 0x01	; 1
 3ae:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <__data_end+0x1>
 3b2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 3b6:	4a e0       	ldi	r20, 0x0A	; 10
 3b8:	66 e5       	ldi	r22, 0x56	; 86
 3ba:	71 e0       	ldi	r23, 0x01	; 1
 3bc:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__itoa_ncheck>
				itoa(count,buffer,10);
				ENVIA_CADENA(buffer);
 3c0:	86 e5       	ldi	r24, 0x56	; 86
 3c2:	91 e0       	ldi	r25, 0x01	; 1
 3c4:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
			}
		}
		of = 0;
		POS_LINEA2(0);
		ENVIA_CADENA("Llevas: 0");
		while(of==0)
 3c8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <of>
 3cc:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <of+0x1>
 3d0:	89 2b       	or	r24, r25
 3d2:	c9 f2       	breq	.-78     	; 0x386 <main+0xfa>
 3d4:	6e cf       	rjmp	.-292    	; 0x2b2 <main+0x26>

000003d6 <__itoa_ncheck>:
 3d6:	bb 27       	eor	r27, r27
 3d8:	4a 30       	cpi	r20, 0x0A	; 10
 3da:	31 f4       	brne	.+12     	; 0x3e8 <__itoa_ncheck+0x12>
 3dc:	99 23       	and	r25, r25
 3de:	22 f4       	brpl	.+8      	; 0x3e8 <__itoa_ncheck+0x12>
 3e0:	bd e2       	ldi	r27, 0x2D	; 45
 3e2:	90 95       	com	r25
 3e4:	81 95       	neg	r24
 3e6:	9f 4f       	sbci	r25, 0xFF	; 255
 3e8:	0c 94 f7 01 	jmp	0x3ee	; 0x3ee <__utoa_common>

000003ec <__utoa_ncheck>:
 3ec:	bb 27       	eor	r27, r27

000003ee <__utoa_common>:
 3ee:	fb 01       	movw	r30, r22
 3f0:	55 27       	eor	r21, r21
 3f2:	aa 27       	eor	r26, r26
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	aa 1f       	adc	r26, r26
 3fa:	a4 17       	cp	r26, r20
 3fc:	10 f0       	brcs	.+4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3fe:	a4 1b       	sub	r26, r20
 400:	83 95       	inc	r24
 402:	50 51       	subi	r21, 0x10	; 16
 404:	b9 f7       	brne	.-18     	; 0x3f4 <__utoa_common+0x6>
 406:	a0 5d       	subi	r26, 0xD0	; 208
 408:	aa 33       	cpi	r26, 0x3A	; 58
 40a:	08 f0       	brcs	.+2      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40c:	a9 5d       	subi	r26, 0xD9	; 217
 40e:	a1 93       	st	Z+, r26
 410:	00 97       	sbiw	r24, 0x00	; 0
 412:	79 f7       	brne	.-34     	; 0x3f2 <__utoa_common+0x4>
 414:	b1 11       	cpse	r27, r1
 416:	b1 93       	st	Z+, r27
 418:	11 92       	st	Z+, r1
 41a:	cb 01       	movw	r24, r22
 41c:	0c 94 10 02 	jmp	0x420	; 0x420 <strrev>

00000420 <strrev>:
 420:	dc 01       	movw	r26, r24
 422:	fc 01       	movw	r30, r24
 424:	67 2f       	mov	r22, r23
 426:	71 91       	ld	r23, Z+
 428:	77 23       	and	r23, r23
 42a:	e1 f7       	brne	.-8      	; 0x424 <strrev+0x4>
 42c:	32 97       	sbiw	r30, 0x02	; 2
 42e:	04 c0       	rjmp	.+8      	; 0x438 <strrev+0x18>
 430:	7c 91       	ld	r23, X
 432:	6d 93       	st	X+, r22
 434:	70 83       	st	Z, r23
 436:	62 91       	ld	r22, -Z
 438:	ae 17       	cp	r26, r30
 43a:	bf 07       	cpc	r27, r31
 43c:	c8 f3       	brcs	.-14     	; 0x430 <strrev+0x10>
 43e:	08 95       	ret

00000440 <_exit>:
 440:	f8 94       	cli

00000442 <__stop_program>:
 442:	ff cf       	rjmp	.-2      	; 0x442 <__stop_program>
